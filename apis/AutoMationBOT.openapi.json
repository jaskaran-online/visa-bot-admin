{
  "openapi": "3.0.1",
  "info": {
    "title": "AutoMationBOT",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Health"
    },
    {
      "name": "Bot Management"
    },
    {
      "name": "Bot Control"
    },
    {
      "name": "Logs"
    },
    {
      "name": "Appointments"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Basic health check",
        "deprecated": false,
        "description": "Returns basic health status of the API service",
        "operationId": "health_check_health_get",
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicHealthResponse"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/health/detailed": {
      "get": {
        "summary": "Detailed health check",
        "deprecated": false,
        "description": "Returns detailed health information including system statistics and bot statuses",
        "operationId": "detailed_health_check_health_detailed_get",
        "tags": [
          "Health"
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/": {
      "get": {
        "summary": "API root",
        "deprecated": false,
        "description": "Returns the API status and version",
        "operationId": "root__get",
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicHealthResponse"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots": {
      "get": {
        "summary": "Get all bots",
        "deprecated": false,
        "description": "Returns a list of all bots in the system",
        "operationId": "get_all_bots_bots_get",
        "tags": [
          "Bot Management"
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BotList"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "Create a new bot",
        "deprecated": false,
        "description": "Creates a new bot with the provided configuration",
        "operationId": "create_bot_bots_post",
        "tags": [
          "Bot Management"
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BotCreate"
              },
              "example": {
                "config": {
                  "EMAIL": "ssoniasaraiya1383@gmail.com",
                  "PASSWORD": "Sonia@1991",
                  "COUNTRY": "ca",
                  "FACILITY_ID": "94",
                  "ASC_FACILITY_ID": "94",
                  "SCHEDULE_ID": "67023950",
                  "MIN_DATE": "2025-04-20",
                  "MAX_DATE": "2027-04-20"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BotResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}": {
      "get": {
        "summary": "Get a specific bot",
        "deprecated": false,
        "description": "Returns detailed information about a specific bot",
        "operationId": "get_bot_bots__bot_id__get",
        "tags": [
          "Bot Management"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BotResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete a bot",
        "deprecated": false,
        "description": "Permanently deletes a bot from the system",
        "operationId": "delete_bot_bots__bot_id__delete",
        "tags": [
          "Bot Management"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "string_string_string",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}/start": {
      "post": {
        "summary": "Start a bot",
        "deprecated": false,
        "description": "Starts a bot process to begin searching for appointments",
        "operationId": "start_bot_bots__bot_id__start_post",
        "tags": [
          "Bot Control"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "67023950_92_ca",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}/stop": {
      "post": {
        "summary": "Stop a bot",
        "deprecated": false,
        "description": "Stops a running bot",
        "operationId": "stop_bot_bots__bot_id__stop_post",
        "tags": [
          "Bot Control"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "67023950_94_ca",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}/restart": {
      "post": {
        "summary": "Restart a bot",
        "deprecated": false,
        "description": "Stops and then starts a bot",
        "operationId": "restart_bot_bots__bot_id__restart_post",
        "tags": [
          "Bot Control"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "67023950_94_ca",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}/logs": {
      "get": {
        "summary": "Get bot logs",
        "deprecated": false,
        "description": "Returns the logs for a specific bot",
        "operationId": "get_logs_bots__bot_id__logs_get",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "67023950_94_ca",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": false,
            "example": 5,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "title": "Response Get Logs Bots  Bot Id  Logs Get"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/redoc": {
      "get": {
        "summary": "Get bot logs Copy",
        "deprecated": false,
        "description": "Returns the logs for a specific bot",
        "operationId": "get_logs_bots__bot_id__logs_get",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "title": "Response Get Logs Bots  Bot Id  Logs Get"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/logs/stream/general": {
      "get": {
        "summary": "stream/general",
        "deprecated": false,
        "description": "Returns the logs for a specific bot",
        "operationId": "get_logs_bots__bot_id__logs_get",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "title": "Response Get Logs Bots  Bot Id  Logs Get"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/test-email": {
      "get": {
        "summary": "/test-email",
        "deprecated": false,
        "description": "Returns the logs for a specific bot",
        "operationId": "get_logs_bots__bot_id__logs_get",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "title": "Response Get Logs Bots  Bot Id  Logs Get"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/bots/{bot_id}/logs/clear": {
      "post": {
        "summary": "Clear bot logs",
        "deprecated": false,
        "description": "Clears the logs for a specific bot",
        "operationId": "clear_logs_bots__bot_id__logs_clear_post",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "67023950_92_ca",
            "schema": {
              "type": "string",
              "title": "Bot Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "9fa2f123ccc8822c71f85e00ccf2c35e954caa6611dcd701c112a7b46e8cff48",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/appointments": {
      "get": {
        "summary": "Get all appointments",
        "deprecated": false,
        "description": "Returns a list of all successful appointments with filtering and sorting options",
        "operationId": "get_appointments_appointments_get",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "facility_id",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Facility Id"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Date"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "default": "appointment_date",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentList"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "Create a new appointment",
        "deprecated": false,
        "description": "Manually create a new successful appointment record",
        "operationId": "create_appointment_appointments_post",
        "tags": [
          "Appointments"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Appointment",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfulAppointment"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/appointments/{appointment_id}": {
      "get": {
        "summary": "Get a specific appointment",
        "deprecated": false,
        "description": "Returns details of a specific successful appointment",
        "operationId": "get_appointment_appointments__appointment_id__get",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfulAppointment"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update an appointment",
        "deprecated": false,
        "description": "Update an existing successful appointment record",
        "operationId": "update_appointment_appointments__appointment_id__put",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Appointment",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfulAppointment"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete an appointment",
        "deprecated": false,
        "description": "Delete an existing successful appointment record",
        "operationId": "delete_appointment_appointments__appointment_id__delete",
        "tags": [
          "Appointments"
        ],
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "title": "Appointment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/appointments/stats": {
      "get": {
        "summary": "Get appointment statistics",
        "deprecated": false,
        "description": "Returns statistics about successful appointments",
        "operationId": "get_appointment_stats_appointments_stats_get",
        "tags": [
          "Appointments"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentStats"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentList": {
        "properties": {
          "appointments": {
            "items": {
              "$ref": "#/components/schemas/SuccessfulAppointment"
            },
            "type": "array",
            "title": "Appointments"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "appointments",
          "total_count"
        ],
        "title": "AppointmentList"
      },
      "AppointmentStats": {
        "properties": {
          "total_appointments": {
            "type": "integer",
            "title": "Total Appointments"
          },
          "bookings_by_country": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Bookings By Country",
            "properties": {}
          },
          "bookings_by_facility": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Bookings By Facility",
            "properties": {}
          },
          "bookings_by_month": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Bookings By Month",
            "properties": {}
          },
          "average_wait_days": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Wait Days"
          }
        },
        "type": "object",
        "required": [
          "total_appointments",
          "bookings_by_country",
          "bookings_by_facility",
          "bookings_by_month"
        ],
        "title": "AppointmentStats"
      },
      "BasicHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "version": {
            "type": "string",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "status",
          "version"
        ],
        "title": "BasicHealthResponse"
      },
      "BotConfig": {
        "properties": {
          "EMAIL": {
            "type": "string",
            "title": "Email"
          },
          "PASSWORD": {
            "type": "string",
            "title": "Password"
          },
          "COUNTRY": {
            "type": "string",
            "title": "Country"
          },
          "FACILITY_ID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facility Id"
          },
          "ASC_FACILITY_ID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Facility Id"
          },
          "SCHEDULE_ID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule Id"
          },
          "MIN_DATE": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Date"
          },
          "MAX_DATE": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Date"
          }
        },
        "type": "object",
        "required": [
          "EMAIL",
          "PASSWORD",
          "COUNTRY"
        ],
        "title": "BotConfig"
      },
      "BotCreate": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/BotConfig"
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "BotCreate"
      },
      "BotList": {
        "properties": {
          "bots": {
            "items": {
              "$ref": "#/components/schemas/BotResponse"
            },
            "type": "array",
            "title": "Bots"
          }
        },
        "type": "object",
        "required": [
          "bots"
        ],
        "title": "BotList"
      },
      "BotResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "config": {
            "$ref": "#/components/schemas/BotConfig"
          },
          "status": {
            "$ref": "#/components/schemas/BotStatus"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "logs": {
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            },
            "type": "array",
            "title": "Logs",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "config",
          "status",
          "start_time"
        ],
        "title": "BotResponse"
      },
      "BotStatus": {
        "type": "string",
        "enum": [
          "running",
          "stopped",
          "error",
          "completed"
        ],
        "title": "BotStatus"
      },
      "ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": false
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "error"
        ],
        "title": "ErrorResponse"
      },
      "GenericResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "GenericResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "service": {
            "$ref": "#/components/schemas/ServiceStatus"
          },
          "system": {
            "$ref": "#/components/schemas/SystemStats"
          },
          "bots": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Bots",
            "properties": {}
          }
        },
        "type": "object",
        "required": [
          "service",
          "system",
          "bots"
        ],
        "title": "HealthResponse"
      },
      "LogEntry": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "info"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "LogEntry"
      },
      "ServiceStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "uptime": {
            "type": "string",
            "title": "Uptime"
          },
          "server_time": {
            "type": "string",
            "title": "Server Time"
          }
        },
        "type": "object",
        "required": [
          "status",
          "uptime",
          "server_time"
        ],
        "title": "ServiceStatus"
      },
      "SuccessfulAppointment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "bot_id": {
            "type": "string",
            "title": "Bot Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "facility_id": {
            "type": "string",
            "title": "Facility Id"
          },
          "facility_name": {
            "type": "string",
            "title": "Facility Name"
          },
          "appointment_date": {
            "type": "string",
            "format": "date",
            "title": "Appointment Date"
          },
          "appointment_time": {
            "type": "string",
            "title": "Appointment Time"
          },
          "asc_appointment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Appointment Date"
          },
          "asc_appointment_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asc Appointment Time"
          },
          "booked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Booked At"
          },
          "visa_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visa Type"
          },
          "schedule_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "bot_id",
          "email",
          "country",
          "facility_id",
          "facility_name",
          "appointment_date",
          "appointment_time"
        ],
        "title": "SuccessfulAppointment"
      },
      "SystemStats": {
        "properties": {
          "cpu_usage": {
            "type": "number",
            "title": "Cpu Usage"
          },
          "memory_usage": {
            "type": "number",
            "title": "Memory Usage"
          },
          "disk_usage": {
            "type": "number",
            "title": "Disk Usage"
          },
          "python_version": {
            "type": "string",
            "title": "Python Version"
          },
          "platform_info": {
            "type": "string",
            "title": "Platform Info"
          }
        },
        "type": "object",
        "required": [
          "cpu_usage",
          "memory_usage",
          "disk_usage",
          "python_version",
          "platform_info"
        ],
        "title": "SystemStats"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": []
}